swagger: '2.0'
info:
  description: This is a document from Activity Tracking Microservice RESTful API
  version: 1.0.0
  title: Activity Tracking API 
  # put the contact info for your development or API team
  contact:
    email: lucas.rocha@nutes.uepb.edu.br

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
    
# API URL
# host: 127.0.0.1:3000
# basePath: /api/v1
host: virtserver.swaggerhub.com
basePath: /lucasrochagit/activity-tracking/1.0.0
schemes:
 - https
 
# tags are used for organizing operations
tags:
- name: users.activities
  description: Operations for user activity tracking.

# path from API 
paths:
  /users/{user_id}/activities:
    get:
      tags:
      - users.activities
      summary: Get all user's activities.
      operationId: getAllActivities
      description: "Method used to retrieve all activities associated with a user"
      produces:
      - application/json
      parameters: 
        - in: path
          name: user_id
          type: string
          required: true
          description: "Id of user."
          x-example: "5a62be07d6f33400146c9b61"
        - $ref: '#/parameters/fieldsParam'
        - $ref: '#/parameters/offsetParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/sortParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/dateStartParam'
        - $ref: '#/parameters/dateEndParam'
        - $ref: '#/parameters/periodParam'   
      responses:
        200:
          description: "Successful requisition."
          schema:
            type: array
            items:
              $ref: '#/definitions/Activity'
        401:
          description: "Authentication failed due to invalid authentication credentials."
          schema:
            $ref: '#/definitions/Error'
        403:
          description: "User does not have permission to get activities."
          schema:
            $ref: '#/definitions/Error'
        404:
          description: "Specified resource does not exist. Usually when the URI is incorrect or the resource is not found, or even no longer exists."
          schema:
            $ref: '#/definitions/Error'
        406:
          description:  "The server is not implementing the media type requested by the client for the application response. Only application/json is currently accepted."
          schema:
            $ref: '#/definitions/Error'
        429:
          description: "The rate limit for requests exceeded."
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "An internal server error occurred. Although the client appears to provide a correct request, the server encountered an unexpected condition that prevented it from responding to the request."
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
      - users.activities
      summary: Save a new activity tracking.
      operationId: saveActivity
      description: "Method used to save a new activity and associated with an user."
      produces:
      - application/json
      parameters: 
        - in: path
          name: user_id
          type: string
          required: true
          description: "Id of user."
          x-example: "5a62be07d6f33400146c9b61"
        - in: body
          name: activity
          required: true
          description: "Activity to be insert"
          schema:
            $ref: '#/definitions/Activity'
      responses:
        201:
          description: "Activity logged sucessfully."
          schema:
            $ref: '#/definitions/Activity'
        400:
          description: "Request can not be met, syntactically incorrect or violates the schema. Normally it occurs due to validation issues, such as fields that are expected in the request body and not passed."
          schema:
            $ref: '#/definitions/Error'             
        401:
          description: "Authentication failed due to invalid authentication credentials."
          schema:
            $ref: '#/definitions/Error'
        403:
          description: "User does not have permission to register activities."
          schema:
            $ref: '#/definitions/Error'
        404:
          description: "Specified resource does not exist. Usually when the URI is incorrect or the resource is not found, or even no longer exists."
          schema:
            $ref: '#/definitions/Error'
        406:
          description: "The server is not implementing the media type requested by the client for the application response. Only application/json is currently accepted."
          schema:
            $ref: '#/definitions/Error'
        415:
          description: "The server does not support the requested payload format. Only application / json is accepted."
          schema:
            $ref: '#/definitions/Error'        
        429:
          description: "The rate limit for requests exceeded."
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "An internal server error occurred. Although the client appears to provide a correct request, the server encountered an unexpected condition that prevented it from responding to the request."
          schema:
            $ref: '#/definitions/Error'
            
  /users/{user_id}/activities/{activity_id}:
    get:
      tags:
      - users.activities
      summary: Get a unique user's activity.
      operationId: getActivitiyById
      description: "Method used to retrieve unique activiy associated with a user by id."
      produces:
      - application/json
      parameters: 
        - in: path
          name: user_id
          type: string
          required: true
          description: "Id of user."
          x-example: "5a62be07d6f33400146c9b61"
        - in: path
          name: activity_id
          type: string
          required: true
          description: "Id of activity."
          x-example: "5a62be07d6e34500146d9c544"
      responses:
        200:
          description: "Successful requisition."
          schema:
            $ref: '#/definitions/Activity'
        401:
          description: "Authentication failed due to invalid authentication credentials."
          schema:
            $ref: '#/definitions/Error'
        403:
          description: "User does not have permission to get activities."
          schema:
            $ref: '#/definitions/Error'
        404:
          description: "Specified resource does not exist. Usually when the URI is incorrect or the resource is not found, or even no longer exists."
          schema:
            $ref: '#/definitions/Error'
        406:
          description: "The server is not implementing the media type requested by the client for the application response. Only application/json is currently accepted."
          schema:
            $ref: '#/definitions/Error'
        429:
          description: "The rate limit for requests exceeded."
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "An internal server error occurred. Although the client appears to provide a correct request, the server encountered an unexpected condition that prevented it from responding to the request."
          schema:
            $ref: '#/definitions/Error'
            
    delete:
      tags: 
      - users.activities
      summary: "Remove an activity."
      description: "Removes an activity associated with a user."
      operationId: deleteActivity
      parameters: 
        - in: path
          name: user_id
          type: string
          required: true
          description: "Id of user."
          x-example: "5a62be07d6f33400146c9b61"
        - in: path
          name: activity_id
          type: string
          required: true
          description: "Id of activity."
          x-example: "5a62be07d6e34500146d9c544"
      responses:
        204:
          description: "Operation performed successfully. There is no data to be returned."
        401:
          description: "Authentication failed due to invalid authentication credentials."
          schema:
            $ref: '#/definitions/Error'
        403:
          description: "User does not have permission to delete activities."
          schema:
            $ref: '#/definitions/Error'
        404:
          description: "Specified resource does not exist. Usually when the URI is incorrect or the resource is not found, or even no longer exists."
          schema:
            $ref: '#/definitions/Error'
        406:
          description: "The server is not implementing the media type requested by the client for the application response. Only application/json is currently accepted."
          schema:
            $ref: '#/definitions/Error'
        429:
          description: "The rate limit for requests exceeded."
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "An internal server error occurred. Although the client appears to provide a correct request, the server encountered an unexpected condition that prevented it from responding to the request."
          schema:
            $ref: '#/definitions/Error'
            
definitions:
  Activity:
    type: object
    required: 
    - user_id
    - name
    - start_time
    - end_time
    - duration
    - intensity_level
    - distance
    - calories
    - steps
    properties:
      id:
        type: string
        format: uuid
        description: "Automatically generated key field."
        example: "5a62be07de34500146d9c544"
      user_id:
        type: string
        format: uuid
        description: "Id of user."
        example: "5a62be07d6f33400146c9b61"
      name:
        type: string 
        description: "Name of activity."
        example: "walk"
      location: 
        type: string
        description: "Place where the activity was performed."
        example: "UEPB - Universidade Estadual da Para√≠ba"
      start_time:
        type: string
        format: date-time
        description: "Activity start time according to the UTC."
        example: "2018-08-07T08:25:00.000"
      end_time:
        type: string
        format: date-time
        description: "Activity end time according to the UTC."
        example: "2018-08-07T09:25:00.000"
      duration:
        type: integer
        description: "Total time spent on activity."
        example: 1075000
      intensity_level:
        type: string
        description: "Maximum intensity reached in the activity."
        example: "very"
      distance:
        type: number
        description: "Distance traveled during activity, in meters."
        example: 25.8
      calories:
        type: integer
        description: "Calories spent during activity."
        example: 123
      steps: 
        type: integer
        description: "Number of steps taken during the activity."
        example: 1701
        
        
  # Defini√ß√£o do schema de erro padr√£o para as respostas das requisi√ß√µes
  Error:
    type: object
    description: "Default template for error message. All errors returned will follow this template."
    required:
      - code
      - message
      - description
    properties:
      code:
        type: integer
        description: "API unique code that indicates specific details of the error, or the response code's own status code when the unique code is not applicable."
      message:
        type: string
        description: "Readable and short error description."
      description:
        type: string
        description: "Detailed description of the error."
        
parameters:

  # Respostas Parciais
  fieldsParam:
    in: query
    name: fields
    required: false
    type: array
    items:
      type: string
    description: "Allows you to retrieve only the information you want. To do this, simply provide the name of the attributes separated by commas, for example: **_fields = field1, field2** indicates that only field1 and field2 should be listed in the query result."
    
  # Pagina√ß√£o
  offsetParam:
    in: query
    name: offset
    type: integer
    format: int32
    required: false
    minimum: 0
    default: 0
    description: "The number of items to skip before you start collecting the result set."
    
  limitParam:
    in: query
    name: limit
    type: integer
    format: int32
    required: false
    maximum: 100
    default: 20
    description: "The number of items to return."
  
  # Ordena√ß√£o
  sortParam:
    in: query
    name: sort
    required: false
    type: array
    items:
      type: string
    default: ["created_at"]
    description: "Contains the names of the comma-separated attributes that will be used to sort the result of the query. For ascending use before the attribute name the + character and for descending use the - character. By default the order is ascending, so the + symbol is optional, just inform the attribute."
  
  # Filtragem
  filterParam:
    in: query
    name: "{fieldName}"
    required: false
    type: string
    description: "**{fieldName}** - _Attribute of the resource you want to apply filtering._\nTo filter a collection by multiple attributes at the same time or filter multiple values for an attribute, simply use the attribute / property name with an equal sign and the expected values, separated by commas **_property=value1,value2,value3_**. The query is not case sensitive. For filtering with logical operators just follow the syntax **_property=operator:value_**. The available operators are:\n - **gt** -> Defines which value of the attribute is greater than (that is,>) the specified value.\n - **gte** -> Defines which attribute value is greater than or equal to (that is,> =) the specified value.\n - **lt** -> Sets the value of the attribute to be less than (that is, <) the specified value.\n - **lte** -> Defines which value of the attribute is less than or equal to (that is, <=) the specified value.\n"
    
  # Data
  dateStartParam:
    in: query
    name: date_start
    required: false
    type: string
    description: "Define start date in the format: YYYY-MM-DD or YYYY-MM-DD hh: mm: ss. The attribute used for the query will be the registration_date."
  
  dateEndParam:
    in: query
    name: date_end
    required: false
    type: string
    description: "Define the end date in the format: YYYY-MM-DD or YYYY-MM-DD hh: mm: ss. The attribute used for the query will be the registration_date."
    default: "today"
    
  periodParam:
    in: query
    name: period
    required: false
    type: string
    description: "Sets the period from the available:\n - **[1..n]d** - Total days (1d, 2d, ...)\n - **[1..n]w** - Total weeks (1w, 2w, ...)\n - **[1..n]m** - Total months (1m, 2m, ...)\n - **[1..n]y** - Total years (1y, 2y, ...)\n\nThe attribute used for the query will be the registration_date."