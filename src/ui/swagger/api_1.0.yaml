openapi: 3.0.0
info:
  version: v1
  title: OCARIoT Activity Tracking Service
  description: >- 
    This is the RESTful API documentation of the microservice for physical 
    activity, sleep, environmental measurements _(temperature, humidity, pm1, pm2.5, pm10)_ and some other measurements _(bodyfat and weight)_.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - description: Localhost
    url: https://localhost:4001
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/nutes.ocariot/tracking-service/v1
tags:
- name: children.physicalactivities
  description: Operations for the Child PhysicalActivity resource.
- name: children.sleep
  description: Operations for the Child Sleep resource.
- name: children.logs
  description: Operations related to the child's daily activity, for example, how many steps were taken on the day, how many calories were burned, and so on. **It is not related to physical activity.**    
- name: children.weights
  description: Operations for the child Weight Measurement resource.
- name: children.bodyfats
  description: Operations for the child Body Fat Measurement resource.
- name: environments
  description: Operations for the Environment Measurements feature.
  
paths:
  # children.physicalactivities
  /v1/children/{child_id}/physicalactivities:
    post:
      security:
        - JWTAuth: []
      tags:
      - children.physicalactivities
      summary: Register physical activities.
      operationId: saveActivity
      description: Register a new physical activity and associate it to a Child.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      responses:
        '201':
          description: Physical Activity saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalActivity'
        '207':
          description: Successful request, however, can have several status codes for the case of a list of submitted resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatus'                
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register activities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                     
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true          
        description: Activity to be insert
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/PhysicalActivity'
    get:
      security:
        - JWTAuth: []    
      tags:
      - children.physicalactivities
      summary: Recovers physical activities of the child.
      operationId: getAllPhysicalActivitiesOfChild
      description: Returns list with physical activities associated with a child. The query supports Field Selection, Paging and Sorting.
              
        > This route supports query strings such as logical operators, date, and more. You can get information about query filter types by visiting this [link](https://github.com/nutes-uepb/query-strings-parser/wiki/3.4-Filtering).
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalActivity'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get activities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/children/{child_id}/physicalactivities/{physicalactivity_id}:
    get:
      security:
        - JWTAuth: []
      tags:
      - children.physicalactivities
      summary: Recover physical activity data.
      operationId: getPhysicalActivityById
      description: Recover the physical activities data associated with a Child.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: physicalactivity_id
        required: true
        description: Id of physical activities.
        example: 5c5277b8004ce629c1eef323
        schema:
          type: string
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalActivity'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get activities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      security:
        - JWTAuth: []
      tags:
      - children.physicalactivities
      summary: Update physical activities data.
      description: Update the physical activities data.
      operationId: updatePhysicalActivityOfChild
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of user.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: physicalactivity_id
        required: true
        description: Id of physical activities.
        example: 5c5277b8004ce629c1eef323
        schema:
          type: string
      responses:
        '200':
          description: Updated activity data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalActivity'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.                
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update activity data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalActivity'
        description: Data of the activity to be updated.
        required: true
    delete:
      security:
        - JWTAuth: []    
      tags:
      - children.physicalactivities
      summary: Delete physical activity data.
      description: Delete the physical activity data.
      operationId: deletePhysicalActivityOfChild
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of user.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: physicalactivity_id
        required: true
        description: Id of physical activity.
        example: 5c5277b8004ce629c1eef323
        schema:
          type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '400':
          description: >-
              The request cannot be fulfilled. This is usually due to validation 
              issues with the resource id you want to remove.              
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete activities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
 
  # children.physicalactivities.logs
  /v1/children/{child_id}/logs/date/{date_start}/{date_end}:
    get:
      security:
        - JWTAuth: []    
      tags:
      - children.logs
      summary: Recover the logs.
      operationId: getLogs
      description: >-
        Recover log with information on the total steps, calories, active_minutes, lightly_active_minutes and sedentary_minutes in a given period.<br><br>
        The sedentary_minutes are calculated by movement, and you need to be inactive for 10 consecutive minutes before the period is considered stationary.<br>
        The lightly_active_minutes field represents minutes of light activites. 
        The active_minutes represent field represents minutes of fairly active and very active activities.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of user.
        example: '5a62be07d6f33400146c9b61'
        schema:
          type: string
      - in: path
        name: date_start
        required: true
        description: The start date of the range in the format yyyy-MM-dd or today.
        example: '2019-04-23'
        schema:
          type: string
      - in: path
        name: date_end
        required: true
        description: The end date of the range in the format yyyy-MM-dd or today.
        example: '2019-04-27'
        schema:
          type: string             
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: object
                properties:
                  steps:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                        value:
                          type: number
                    example:
                    - date: '2019-04-23'
                      value: 14100
                    - date: '2019-04-24'
                      value: 15687
                  calories:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                        value:
                          type: number
                    example:
                    - date: '2019-04-23'
                      value: 15000
                    - date: '2019-04-24'
                      value: 18159                  
                  active_minutes:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                        value:
                          type: number
                    example:
                    - date: '2019-04-23'
                      value: 48
                    - date: '2019-04-24'
                      value: 57
                  lightly_active_minutes:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                        value:
                          type: number
                    example:
                    - date: '2019-04-23'
                      value: 35
                    - date: '2019-04-24'
                      value: 44
                  sedentary_minutes:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                        value:
                          type: number
                    example:
                    - date: '2019-04-23'
                      value: 105
                    - date: '2019-04-24'
                      value: 96    
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The user does not have permission to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /v1/children/{child_id}/logs/{resource}/date/{date_start}/{date_end}:
    get:
      security:
        - JWTAuth: []    
      tags:
      - children.logs
      summary: Recover the logs.
      operationId: getLogByResource
      description: >-
        Recover log with information on the total steps, calories, active_minutes, lightly_active_minutes or sedentary_minutes in a given period.<br><br>
        The sedentary_minutes are calculated by movement, and you need to be inactive for 10 consecutive minutes before the period is considered stationary.<br>
        The lightly_active_minutes field represents minutes of light activites. 
        The active_minutes represent field represents minutes of fairly active and very active
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: '5a62be07d6f33400146c9b61'
        schema:
          type: string
      - in: path
        name: resource
        required: true
        description: Name of resource.
        example: 'steps'
        schema:
          type: string
          enum: ['steps', 'calories', 'active_minutes', 'lightly_active_minutes','sedentary_minutes']
      - in: path
        name: date_start
        required: true
        description: The start date of the range in the format yyyy-MM-dd or today.
        example: '2019-04-23'
        schema:
          type: string  
      - in: path
        name: date_end
        required: true
        description: The end date of the range in the format yyyy-MM-dd or today.
        example: '2019-04-27'
        schema:
          type: string             
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    value:
                      type: number
                example:
                - date: '2019-04-23'
                  value: 14100
                - date: '2019-04-24'
                  value: 15687                  
                - date: '2019-04-25'
                  value: 0
                - date: '2019-04-26'
                  value: 2901  
                - date: '2019-04-27'
                  value: 8561
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The user does not have permission to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/children/{child_id}/logs/{resource}:
    post:
      security:
        - JWTAuth: []    
      tags:
      - children.logs
      summary: Register logs.
      operationId: saveLogByResource
      description: Register a collection of resource logs associated with a child.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: '5a62be07d6f33400146c9b61'
        schema:
          type: string
      - in: path
        name: resource
        required: true
        description: Name of resource.
        example: 'steps'
        schema:
          type: string
          enum: ['steps', 'calories', 'active_minutes', 'lightly_active_minutes', 'sedentary_minutes']
      responses:
        '207':
          description: Successful request, however, can have several status codes for the case of a list of submitted resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatus'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register activities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true          
        description: Activity logs to be insert
        content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    value:
                      type: number
                example:
                - date: '2019-04-23'
                  value: 14100
                - date: '2019-04-24'
                  value: 15687                  
                - date: '2019-04-25'
                  value: 0
                - date: '2019-04-26'
                  value: 2901  
                - date: '2019-04-27'
                  value: 8561          
 
  /v1/children/{child_id}/sleep:
    post:
      security:
        - JWTAuth: []    
      tags:
      - children.sleep
      summary: Register sleep.
      operationId: saveSleep
      description: Register a new sleep and associate it to a child.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      responses:
        '201':
          description: Sleep saved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sleep'
        '207':
          description: Successful request, however, can have several status codes for the case of a list of submitted resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatus'                
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The user does not have permission to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        description: Activity to be insert
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Sleep'
    get:
      security:
        - JWTAuth: []
      tags:
      - children.sleep
      summary: Retrieve sleep record of child.
      operationId: getAllSleepOfChild
      description: Returns list with sleep record. The query supports Field Selection, Paging and Sorting.
              
        > This route supports query strings such as logical operators, date, and more. You can get information about query filter types by visiting this [link](https://github.com/nutes-uepb/query-strings-parser/wiki/3.4-Filtering).
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sleep'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get sleep.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/children/{child_id}/sleep/{sleep_id}:
    get:
      security:
        - JWTAuth: []    
      tags:
      - children.sleep
      summary: Retrieve sleep data.
      operationId: getSleepById
      description: Retrieve the sleep data associated with an child. The query supports field selection.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: sleep_id
        required: true
        description: Id of sleep.
        example: 3bc1274329fb282470e45004
        schema:
          type: string
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sleep'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get sleep.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      security:
        - JWTAuth: []    
      tags:
      - children.sleep
      summary: Update sleep data.
      description: Update the sleep data.
      operationId: updateSleepOfChild
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: sleep_id
        required: true
        description: Id of sleep.
        example: 3bc1274329fb282470e45004
        schema:
          type: string
      responses:
        '200':
          description: Updated sleep data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sleep'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.                
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update sleep data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sleep'
        description: Data of the sleep to be updated.
        required: true
    delete:
      security:
        - JWTAuth: []    
      tags:
      - children.sleep
      summary: Delete sleep data.
      description: Delete the sleep data.
      operationId: deleteSleepOfChild
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: sleep_id
        required: true
        description: Id of sleep.
        example: 3bc1274329fb282470e45004
        schema:
          type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '400':
          description: >-
              The request cannot be fulfilled. This is usually due to validation 
              issues with the resource id you want to remove.              
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete sleep.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # weight
  /v1/children/{child_id}/weights:
    post:
      tags:
      - children.weights
      summary: Register weight measurement.
      operationId: saveWeightMeasurement
      description: Register a new weight measurement and associate it to a Child.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      responses:
        '201':
          description: Weight measurement saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weight'
        '207':
          description: Successful request, however, can have several status codes for the case of a list of submitted resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatus'                
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete sleep.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true          
        description: Weight measurement to be insert
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Weight'
    get:
      tags:
      - children.weights
      summary: Recovers weight measurements of the child.
      operationId: getAllWeightMeasurementsOfChild
      description: Returns list with weight measurements associated with a child. The query supports Field Selection, Paging and Sorting.
              
        > This route supports query strings such as logical operators, date, and more. You can get information about query filter types by visiting this [link](https://github.com/nutes-uepb/query-strings-parser/wiki/3.4-Filtering).
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weight'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get weight measurements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/children/{child_id}/weights/{weight_id}:
    get:
      tags:
      - children.weights
      summary: Recover weight measurement data.
      operationId: getWeightMeasurementById
      description: Recover the weight measurement data associated with a Child.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: weight_id
        required: true
        description: Id of weight measurement.
        example: 5c5277b8004ce629c1eef323
        schema:
          type: string
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weight'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get weight measurement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - children.weights
      summary: Delete weight measurement data.
      description: Delete the weight measurement data.
      operationId: deleteWeightMeasurementOfChild
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of user.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: weight_id
        required: true
        description: Id of weight measurement.
        example: 5c5277b8004ce629c1eef323
        schema:
          type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '400':
          description: >-
              The request cannot be fulfilled. This is usually due to validation 
              issues with the resource id you want to remove.              
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete weight measurement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # body fat
  /v1/children/{child_id}/bodyfats:
    post:
      tags:
      - children.bodyfats
      summary: Register body fat measurement.
      operationId: saveFat
      description: Register a new body fat measurement and associate it to a Child.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      responses:
        '201':
          description: Body fat measurement saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BodyFat'
        '207':
          description: Successful request, however, can have several status codes for the case of a list of submitted resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatus'                
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete sleep.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true          
        description: Body fat measurement to be insert
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/BodyFat'
    get:
      tags:
      - children.bodyfats
      summary: Recovers body fat measurements of the child.
      operationId: getAllBodyFatOfChild
      description: Returns list with body fat measurements associated with a child. The query supports Field Selection, Paging and Sorting.
              
        > This route supports query strings such as logical operators, date, and more. You can get information about query filter types by visiting this [link](https://github.com/nutes-uepb/query-strings-parser/wiki/3.4-Filtering).
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BodyFat'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get body fat measurements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/children/{child_id}/bodyfats/{bodyfat_id}:
    get:
      tags:
      - children.bodyfats
      summary: Recover body fat measurement data.
      operationId: getBodyFatById
      description: Recover the body fat measurement data associated with a Child.
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of Child.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: bodyfat_id
        required: true
        description: Id of body fat measurement.
        example: 5c5277b8004ce629c1eef323
        schema:
          type: string
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BodyFat'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get body fat measurement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - children.bodyfats
      summary: Delete body fat measurement data.
      description: Delete the body fat measurement data.
      operationId: deleteBodyFatOfChild
      parameters:
      - in: path
        name: child_id
        required: true
        description: Id of user.
        example: 5a62be07d6f33400146c9b61
        schema:
          type: string
      - in: path
        name: bodyfat_id
        required: true
        description: Id of body fat measurement.
        example: 5c5277b8004ce629c1eef323
        schema:
          type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '400':
          description: >-
              The request cannot be fulfilled. This is usually due to validation 
              issues with the resource id you want to remove.              
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete body fat measurement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # environments
  /v1/environments:
    post:
      tags:
      - environments
      summary: Register the environment measurement data.
      operationId: saveEnvironment
      description: Register the environment measurement data.
      responses:
        '201':
          description: Environment saved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '207':
          description: Successful request, however, can have several status codes for the case of a list of submitted resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatus'                
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The user does not have permission to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        description: Measure of environment to be insert.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
    get:
      tags:
      - environments
      summary: Retrieve environment measurements.
      operationId: getAllEnvironments
      description: Returns list with record of environment measurements. The query supports Field Selection, Paging and Sorting.
              
        > This route supports query strings such as logical operators, date, and more. You can get information about query filter types by visiting this [link](https://github.com/nutes-uepb/query-strings-parser/wiki/3.4-Filtering).
      parameters:
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The user does not have permission to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/environments/{environment_id}:            
    delete:
      tags:
      - environments
      summary: Delete measurement environment.
      description: Delete environment measurement data.
      operationId: removeEnvironmentById
      parameters:
      - in: path
        name: environment_id
        required: true
        description: Environment measurement id.
        example: 5bfc5c29d6adac2a10d22b03
        schema:
          type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '400':
          description: >-
              The request cannot be fulfilled. This is usually due to validation 
              issues with the resource id you want to remove.              
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete environmental measurement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    pageParam:
      in: query
      name: page
      required: false
      description: The page number.
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    limitParam:
      in: query
      name: limit
      required: false
      description: The number of items to return.
      schema:
        type: integer
        format: int32
        maximum: 100
        default: 20
    sortParam:
      in: query
      name: sort
      required: false
      description: >-
        Contains the names of the attributes, separated by commas, that
        will be used to sort the result of the query. For ascending sort,
        use the '+' character before the attribute name. For descending
        sort, use the '-' character before the attribute name. By default,
        the order is ascending, so the '+' symbol is optional, just enter
        the attribute.
      schema:
        type: array
        items:
          type: string
          
    filterParam:
      in: query
      name: ''
      required: false
      description: >-
        To filter a collection by multiple concurrent attributes or filter
        multiple values for an attribute, simply use the attribute/property
        name with an equal sign and the expected values, separated by a comma.
        **_property=value1,value2,value3_**. The query is not case sensitive.
        Example: **_?name=elvis,john_** to retrieve exactly the same users with
        elvis or john name.
        For filtering with logical operators, just follow the syntax:
        **_property=operator:value_**. The available operators are:
         - **gt** -> Defines which value of the attribute is greater than
                    (that is,>) the specified value.
         - **gte** -> Defines which attribute value is greater than or equal to
                    (that is,>=) the specified value.
         - **lt** -> Define the value of the attribute to be less than (that is, <)
                    the specified value.
         - **lte** -> Defines which value of the attribute is less than or equal to
                    (that is, <=) the specified value.

        Example: **_?field1=gte:80&age=lt:100_** to recover the users with age
        is greater than or equal to 80 and less then 100.
      schema:
        type: string
    dateStartParam:
      in: query
      name: date_start
      required: false
      description: >-
        Define start date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss. The
        attribute used for the query will be the registration_date.
      schema:
        type: string
    dateEndParam:
      in: query
      name: date_end
      required: false
      description: >-
        Define end date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss.The
        attribute used for the query will be the registration_date.
      schema:
        type: string
        default: today
    periodParam:
      in: query
      name: period
      required: false
      description: |-
        Sets the period from the available ones:
         - **[1..n]d** - Total days (1d, 2d, ...)
         - **[1..n]w** - Total of weeks (1w, 2w, ...)
         - **[1..n]m** - Total of months (1m, 2m, ...)
         - **[1..n]y** - Total of years (1y, 2y, ...)

        The attribute used for the query will be the registration_date.
      schema:
        type: string
  # Resources 
  schemas:
    PhysicalActivity:
      type: object
      required:
      - id
      - name
      - start_time
      - end_time
      - duration
      - calories
      - child_id
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        name:
          type: string
          description: Name of physical activity.
          example: Walk
        start_time:
          type: string
          description: Physical activity start time in UTC format, according to ISO 8601.
          example: "2018-12-14T12:52:59Z"
        end_time:
          type: string
          description: Physical activity end time in UTC format, according to ISO 8601.
          example: "2018-12-14T13:12:37Z"
        duration:
          type: integer
          description: Total time in milliseconds spent in the physical activity.
          example: 1178000
        calories:
          type: integer
          description: Calories spent during physical activity.
          example: 109
        steps:
          type: integer
          description: Number of steps taken during the physical activity.
          example: 1407
        levels:
          type: array
          description: Physical activity levels.
          items:
            type: object
            required:
            - name
            - duration
            properties:
              name:
                type: string
                description: Name of physical activity level (sedentary, light, fair or very).
              duration:
                type: number
                description: Total time spent in milliseconds on the level.   
          example:
            - name: sedentary
              duration: 120000
            - name: lightly
              duration: 60000
            - name: fairly
              duration: 540000
            - name: very
              duration: 420000
        heart_rate:
          type: object
          description: Heart Rate measurement of physical activity.
          required:
            - average
            - out_of_range_zone
            - fat_burn_zone
            - cardio_zone
            - peak_zone
          properties:
              average: 
                type: number
                description: Average heart rate.
                example: 107
              out_of_range_zone:
                type: object
                description: Out of Range heart rate zone.
                required:
                  - min
                  - max
                  - duration
                properties:
                  min:
                    type: number
                    description: Minimum value of the Out of Range zone.
                  max:
                    type: number
                    description: Maximum value of the Out of Range zone.
                  duration:
                    type: number
                    description: Duration in the Out of Range zone (given in milliseconds).
              fat_burn_zone:
                type: object
                description: Fat Burn heart rate zone.
                required:
                  - min
                  - max
                  - duration
                properties:
                  min:
                    type: number
                    description: Minimum value of the Fat Burn zone.
                  max:
                    type: number
                    description: Maximum value of the Fat Burn zone.
                  duration:
                    type: number
                    description: Duration in the Fat Burn zone (given in milliseconds).
              cardio_zone:
                type: object
                description: Cardio heart rate zone.
                required:
                  - min
                  - max
                  - duration
                properties:
                  min:
                    type: number
                    description: Minimum value of the Cardio zone.
                  max:
                    type: number
                    description: Maximum value of the Cardio zone.
                  duration:
                    type: number
                    description: Duration in the Cardio zone (given in milliseconds).
              peak_zone:
                type: object
                description: Peak heart rate zone.
                required:
                  - min
                  - max
                  - duration
                properties:
                  min:
                    type: number
                    description: Minimum value of the Peak zone.
                  max:
                    type: number
                    description: Maximum value of the Peak zone.
                  duration:
                    type: number
                    description: Duration in the Peak zone (given in milliseconds).
          example:
            average: 107
            out_of_range_zone:
              min: 30
              max: 91
              duration: 0
            fat_burn_zone:
              min: 91
              max: 127
              duration: 600000
            cardio_zone:
              min: 127
              max: 154
              duration: 0
            peak_zone:
              min: 154
              max: 220
              duration: 0
        child_id:
          readOnly: true
          type: string
          format: uuid
          description: Child belonging to physical activity
          example: 5a62be07de34500146d9c544    
              
    Sleep:
      type: object
      required:
      - id
      - start_time
      - end_time
      - duration
      - pattern
      - type
      - child_id
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 3bc1274329fb282470e45004
        start_time:
          type: string
          format: date-time
          description: Date and time of sleep onset in UTC format, according to ISO 8601.
          example: "2018-08-18T01:40:30Z"
        end_time:
          type: string
          format: date-time
          description: End date and time of sleep in UTC format, according to ISO 8601.
          example: "2018-08-18T09:52:30Z"
        duration:
          type: integer
          description: Total time in milliseconds spent in all sleep patterns.
          example: 29520000
        pattern:
          type: object
          description: Sleep pattern tracking.
          properties:
            data_set:
              type: array
              description: Sleep pattern tracking (awake, asleep or restless).
              items:
                type: object
                required:
                - start_time
                - name
                - duration
                properties:
                  start_time:
                    type: string
                    description: Date and time of sleep pattern onset.
                  name:
                    type: string
                    description: Name of sleep pattern (awake, asleep or restless).
                  duration:
                    type: integer
                    description: Total in milliseconds of the time spent in the sleep pattern.
              example:
                - start_time: "2018-08-18T01:40:30.00Z"
                  name: restless
                  duration: 60000
                - start_time: "2018-08-18T01:41:30.00Z"
                  name: asleep
                  duration: 360000   
                - start_time: "2018-08-18T01:47:30.00Z"
                  name: restless
                  duration: 240000   
                - start_time: "2018-08-18T01:51:30.00Z"
                  name: asleep
                  duration: 60000   
                - start_time: "2018-08-18T01:52:30.00Z"
                  name: restless
                  duration: 60000   
                - start_time: "2018-08-18T01:53:30.00Z"
                  name: asleep
                  duration: 2100000   
                - start_time: "2018-08-18T02:28:30.00Z"
                  name: restless
                  duration: 240000   
                - start_time: "2018-08-18T02:32:30.00Z"
                  name: awake
                  duration: 180000   
                - start_time: "2018-08-18T02:35:30.00Z"
                  name: asleep
                  duration: 15120000
                - start_time: "2018-08-18T06:47:30.00Z"
                  name: restless
                  duration: 60000
                - start_time: "2018-08-18T06:48:30.00Z"
                  name: asleep
                  duration: 2580000
                - start_time: "2018-08-18T07:31:30.00Z"
                  name: restless
                  duration: 120000           
                - start_time: "2018-08-18T07:33:30.00Z"
                  name: asleep
                  duration: 120000
                - start_time: "2018-08-18T07:35:30.00Z"
                  name: restless
                  duration: 60000
                - start_time: "2018-08-18T07:36:30.00Z"
                  name: asleep
                  duration: 1200000
                - start_time: "2018-08-18T07:56:30.00Z"
                  name: restless
                  duration: 60000    
                - start_time: "2018-08-18T07:57:30.00Z"
                  name: asleep
                  duration: 2580000
                - start_time: "2018-08-18T08:40:30.00Z"
                  name: restless
                  duration: 180000    
                - start_time: "2018-08-18T08:43:30.00Z"
                  name: asleep
                  duration: 1200000
                - start_time: "2018-08-18T09:03:30.00Z"
                  name: restless
                  duration: 60000                                        
                - start_time: "2018-08-18T09:04:30.00Z"
                  name: asleep
                  duration: 1740000
                - start_time: "2018-08-18T09:03:30.00Z"
                  name: restless
                  duration: 180000
                - start_time: "2018-08-18T09:36:30.00Z"
                  name: asleep
                  duration: 960000                    
            summary:
              type: object
              readOnly: true
              properties:
                asleep:
                  type: object
                  properties:
                    count:
                      type: integer
                      example: 467
                    duration:
                      type: integer
                      example: 28020000
                      description: Total time in milliseconds spent in the sleep pattern asleep.
                awake:
                  type: object
                  properties:
                    count:
                      type: integer
                      example: 3
                    duration:
                      type: integer
                      example: 180000
                      description: Total time in milliseconds spent in the sleep pattern awake.
                restless:
                  type: object
                  properties:
                    count:
                      type: integer
                      example: 22
                    duration:
                      type: integer
                      example: 1320000  
                      description: Total time in milliseconds spent in the sleep pattern restless.
        type:
          type: string
          description: Type of the Sleep Pattern (should be 'classic' or 'stages').
          example: classic
        child_id:
          readOnly: true
          type: string
          format: uuid
          description: Child belonging to sleep.
          example: 5a62be07de34500146d9c544                        
                      
    # Environment Schema
    Environment:
      type: object
      required:
      - id
      - institution_id
      - location
      - measurements
      - timestamp
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        institution_id:
          type: string
          format: uuid
          description: Id of institution associated with a environment.
          example: 5a62be07de34500146d9c544 
        location: 
          $ref: '#/components/schemas/Location'
        measurements:
          type: array
          description: Array of environment measurements.
          items:
            type: object
            required:
            - type
            - value
            - unit
            properties:
              type:
                type: string
                enum: [temperature, humidity, pm1, pm2.5, pm10]
                description: Type of measurement.
                example: temperature
              value: 
                type: number
                description: Value of measurement.
                example: 28.6
              unit:
                type: string
                description: Unit of measurement.
                example: "°C"
          example:
            - type: temperature
              value: 35.6
              unit: "°C"
            - type: humidity
              value: 42.2
              unit: "%"
            - type: pm1
              value: 0.57
              unit: "µm"
            - type: pm2.5
              value: 1.9
              unit: "µm"
            - type: pm10
              value: 7.9
              unit: "µm"
              
        climatized: 
          type: boolean
          description: Boolean variable to identify if a environment is climatized.
          example: true
          default: false
        timestamp:
          type: string
          description: Timestamp in UTC format, according to ISO 8601.
          example: "2018-11-19T14:40:00Z"

    Location:
      type: object
      required:
      - local 
      - room
      properties:
        local:
          type: string
          description: Local where device is installed.
          example: indoor
        room: 
          type: string
          description: Room where device is installed.
          example: Bloco H sala 01
        latitude:
          type: number
          description: Latitude from place's geolocation.
          example: -7.2100766
        longitude:
          type: number
          description: Longitude from place's geolocation.
          example: -35.9175756
        
    # BodyFat Schema
    BodyFat:
      type: object
      required:
      - id
      - timestamp
      - value
      - unit
      - child_id
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        timestamp:
          type: string
          description: Timestamp in UTC format, according to ISO 8601.
          example: "2019-06-20T14:40:00Z"
        value:
          type: number
          description: Value of body fat measurement.
          example: 20.2
        unit:
          type: string
          description: Unit of body fat measurement.
          example: '%'
        child_id:
          readOnly: true
          type: string
          format: uuid
          description: Id of child associated with the body fat measurement.
          example: 5a62be07de34500146d9c544 

  # Weight Schema
    Weight:
      type: object
      required:
      - id
      - timestamp
      - value
      - unit
      - child_id
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        timestamp:
          type: string
          description: Timestamp in UTC format, according to ISO 8601.
          example: "2019-06-20T14:40:00Z"
        value:
          type: number
          description: Value of weight measurement.
          example: 70.2
        unit:
          type: string
          description: Unit of weight measurement, according with the International System of Units (SI).
          example: 'kg' 
        child_id:
          readOnly: true
          type: string
          format: uuid
          description: Id of child associated with the weight measurement.
          example: 5a62be07de34500146d9c544
        body_fat:
          type: number
          description: Value in percentage of body fat measurement associated with the weight measurement.
          example: 20.1
    
    MultiStatus:
      type: object
      description: Default template for message when a request returns multiple status.
      required:
        - success
        - error
      properties:
        success:
          type: array
          description: All items that were processed successfully.
          items:
            type: object
            description: Item data processed.
            properties:
              code:
                type: integer
                description: The requisition status code for the item.
                example: 201
              item:
                type: object
                description: Item data that was successfully processed.
        error:
          type: array
          description: All items that were were not processed due to some error.
          items:
            type: object
            description: Item data not processed.
            properties:
              code:
                type: integer
                description: The requisition status code for the item.
                example: 400
              message:
                type: string
                description: Readable and short description of the error.
              description:
                type: string
                description: Detailed description of the error.
              item:
                type: object
                description: Item data that was not successfully processed
    
    Error:
      type: object
      description: >-
        Default template for error message. 
        All returned errors will follow this template.
      required:
      - code
      - message
      - description
      properties:
        code:
          type: integer
          description: >-
            Unique API code that indicates specific details of the error, or
            the actual status code of the response when the unique code is not
            appropriate.
        message:
          type: string
          description: Readable and short description of the error.
        description:
          type: string
          description: Detailed description of the error.